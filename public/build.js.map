{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/main.js","js/src/AppController.js","js/src/AppModel.js","js/src/AppProxy.js","js/src/AppView.js","js/src/components/AssetsManager.js","js/src/components/Background.js","js/src/components/BetPanel.js","js/src/components/BottomPanel.js","js/src/components/Constants.js","js/src/components/Frames.js","js/src/components/Icon.js","js/src/components/IconAnimation.js","js/src/components/IconAnimations.js","js/src/components/IronDude.js","js/src/components/IronDudes.js","js/src/components/LightComponent.js","js/src/components/LightPanel.js","js/src/components/Lightning.js","js/src/components/Lines.js","js/src/components/Reel.js","js/src/components/ReelJoint.js","js/src/components/Reels.js","js/src/components/ServiceProxy.js","js/src/components/Slider.js","js/src/components/Sparkles.js","js/src/components/Utils.js","js/src/components/WinText.js","js/src/components/buttons/Button.js","js/src/components/buttons/InfoButton.js","js/src/components/buttons/LightButton.js","js/src/components/buttons/LinesButton.js","js/src/components/buttons/SliderButton.js","js/src/components/buttons/SpinButton.js","js/src/components/buttons/StartButton.js","js/src/components/buttons/StopButton.js","js/src/core/DisplayObject.js","js/src/core/Renderer.js","js/src/states/IdleState.js","js/src/states/InitState.js","js/src/states/SpinStartState.js","js/src/states/SpinStopState.js","js/src/states/StateMachine.js","js/src/states/WinAnimationState.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {AppController} from './src/AppController'\r\nlet controller = new AppController();\r\n\r\n","/**\r\n * Created by 1 on 25.12.2016.\r\n */\r\n\r\nimport {AssetsManager} from './components/AssetsManager';\r\nimport {AppProxy} from './AppProxy';\r\nimport {AppView} from './AppView';\r\nimport {StateMachine} from './states/StateMachine';\r\nimport {Renderer} from './core/Renderer'\r\n\r\nexport class AppController{\r\n    constructor() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        let view = new AppView();\r\n        Renderer.getInstance().stage.addChild(view);\r\n        StateMachine.getInstance().initialize();\r\n    }\r\n}\r\n\r\n\r\n","import {ServiceProxy} from './components/ServiceProxy';\r\nimport {Constants} from './components/Constants';\r\n\r\n\r\nexport class AppModel{\r\n    constructor(){\r\n        this.service = new ServiceProxy();\r\n        this.reelsFrozen = [false,false,false,false,false,false];\r\n        this.freezable = [true, true, true, true, true, true];\r\n        this.reelsJoint = [];\r\n        this.combination = this.service.localCombination;\r\n        this.balance = 10000;\r\n\r\n        this.spinReceivedSignal = new signals.Signal();\r\n        this.initReceivedSignal = new signals.Signal();\r\n        this.balanceUpdateSignal = new signals.Signal();\r\n        this.reelsFrozenUpdateSignal = new signals.Signal();\r\n    }\r\n\r\n    //-----------------------spin request-response handling-------------------------------//\r\n    getSpinData(){\r\n        this.service.spinResponseSignal.addOnce(this.onSpinResponseReceived.bind(this));\r\n        this.service.sendSpinRequest(this.getSpinRequestData());\r\n    }\r\n\r\n    getSpinRequestData() {\r\n        var data = Object.create(null);\r\n        data.frozen = this.reelsFrozen;\r\n        return data;\r\n    }\r\n\r\n    onSpinResponseReceived(data){\r\n        this.combination = data.combination;\r\n        this.lines       = data.lines;\r\n        this.freezable   = data.freezable;\r\n        this.reelsJoint  = data.joint;\r\n        this.showDudes   = data.dudes;\r\n        this.spinReceivedSignal.dispatch();\r\n    }\r\n    //----------------------init request-response handling---------------------------------//\r\n\r\n    getInitData(){\r\n        this.service.initResponseSignal.addOnce(this.onInitResponseReceived.bind(this));\r\n        this.service.sendInitRequest(Object.create(null));\r\n    }\r\n\r\n    onInitResponseReceived(data){\r\n        this.combination = data.combination;\r\n        this.freezable   = data.freezable;\r\n        this.initReceivedSignal.dispatch();\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------//\r\n    splitFrozenCombination(combination){\r\n        for (let i = 0; i < this.reelsFrozen.length; i++){\r\n            if (this.reelsFrozen[i]){\r\n                combination[i] = this.combination[i];\r\n            }\r\n        }\r\n        return combination;\r\n    }\r\n\r\n    freezeReel(index, value){\r\n        this.reelsFrozen[index] = value;\r\n        this.reelsFrozenUpdateSignal.dispatch();\r\n    }\r\n\r\n    dropFrozenReels(){\r\n        this.reelsFrozen = [false,false,false,false,false,false];\r\n    }\r\n\r\n    getUnfrozenReelsCount(){\r\n        let count = 0;\r\n        for (let i = 0; i < this.reelsFrozen.length; i++){\r\n            if (!this.reelsFrozen[i]){\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    getFrozenReelsCount(){\r\n        let count = 0;\r\n        for (let i = 0; i < this.reelsFrozen.length; i++){\r\n            if (this.reelsFrozen[i]){\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    getSpinTime(){\r\n        let time = Constants.SPIN_TIME;\r\n        if (this.showDudes){\r\n            time += Constants.DUDES_TIME;\r\n        }\r\n        if (this.reelsJoint.length){\r\n            time += this.reelsJoint.length * Constants.JOINT_ADD_TIME;\r\n            if (this.showDudes){\r\n                time -= Constants.DUDES_TIME;\r\n            }\r\n        }\r\n        return time;\r\n    }\r\n\r\n    updateBalance(){\r\n        this.balance += this.lines.length * 1000;\r\n        this.balanceUpdateSignal.dispatch(this.balance);\r\n    }\r\n\r\n    reduceBalance(){\r\n        this.balance -= this.getSpinPrice();\r\n        this.balanceUpdateSignal.dispatch(this.balance);\r\n    }\r\n\r\n    getSpinPrice(){\r\n        return 100 + this.getFrozenReelsCount() * 100;\r\n    }\r\n}\r\n\r\nAppModel.getInstance = function(){\r\n    if (!this.instance) {\r\n        this.instance = new this();\r\n    }\r\n    return this.instance;\r\n};\r\n","export class AppProxy {\r\n    constructor(){\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        this.appView = null;\r\n        this.stage = null;\r\n        this.reels = null;\r\n        this.reelJoint = null;\r\n        this.iconAnimations = null;\r\n        this.lines = null;\r\n        this.lightPanel = null;\r\n        this.lightning = null;\r\n        this.sparkles = null;\r\n        this.ironDudes = null;\r\n        this.frames = null;\r\n\r\n        this.assetsLoadedSignal = new signals.Signal();\r\n        this.immediateStopSpinSignal = new signals.Signal();\r\n        this.startSpinSignal = new signals.Signal();\r\n        this.stopSpinSignal = new signals.Signal();\r\n    }\r\n}\r\n\r\nAppProxy.getInstance = function(){\r\n    if (!this.instance) {\r\n        this.instance = new this();\r\n    }\r\n    return this.instance;\r\n}\r\n\r\n","/**\r\n * Created by 1 on 29.12.2016.\r\n */\r\n\r\nimport {BottomPanel} from './components/BottomPanel';\r\nimport {Background} from './components/Background';\r\nimport {AssetsManager} from './components/AssetsManager';\r\nimport {Reels} from './components/Reels';\r\nimport {DisplayObject} from './core/DisplayObject';\r\nimport {IconAnimations} from './components/IconAnimations'\r\nimport {Lightning} from './components/Lightning';\r\nimport {Lines} from './components/Lines';\r\nimport {Sparkles} from './components/Sparkles';\r\nimport {IronDudes} from './components/IronDudes';\r\nimport {AppProxy} from './AppProxy';\r\n\r\nexport class AppView extends DisplayObject{\r\n\r\n    constructor() {\r\n        super();\r\n        AppProxy.getInstance().appView = this;\r\n    }\r\n\r\n    initialize(){\r\n        this.addBackground();\r\n        this.addBottomPanel();\r\n        this.addLines();\r\n        this.addReels();\r\n        this.addIconsAnimation();\r\n        this.addLightning();\r\n        this.addSparkles();\r\n        this.addIronDude();\r\n    }\r\n\r\n    addBottomPanel(){\r\n        this.bottomPanel = new BottomPanel(new AssetsManager().getBottomPanelTexture());\r\n        this.addChild(this.bottomPanel);\r\n    }\r\n\r\n    addBackground(){\r\n        this.backGround = new Background(new AssetsManager().getBackgroundTexture());\r\n        this.addChild(this.backGround);\r\n    }\r\n\r\n    addReels(){\r\n        this.reels = new Reels(new AssetsManager().getReelsBackgroundTexture());\r\n        this.addChild(this.reels);\r\n\r\n        var graphics = new PIXI.Graphics();\r\n        graphics.beginFill(0x000000);\r\n        graphics.drawRect(69, 108, 1109, 495);\r\n        this.reels.mask = graphics;\r\n        this.addChild(graphics);\r\n    }\r\n\r\n    addIconsAnimation(){\r\n        this.iconAnimations =  new IconAnimations();\r\n        this.addChild(this.iconAnimations);\r\n    }\r\n\r\n    addLightning(){\r\n        this.lightning = new Lightning();\r\n        this.addChild(this.lightning);\r\n    }\r\n\r\n    addLines(){\r\n        this.lines = new Lines();\r\n        this.addChild(this.lines);\r\n    }\r\n\r\n    addSparkles(){\r\n        this.sparkles = new Sparkles();\r\n        this.addChild(this.sparkles);\r\n    }\r\n\r\n    addIronDude(){\r\n    }\r\n}\r\n","import {AppProxy} from './../AppProxy.js';\r\n\r\nexport class AssetsManager{\r\n    constructor() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {}\r\n\r\n    loadAtlas(){\r\n        PIXI.loader\r\n            .add(\"img/description.json\")\r\n            .add(\"img/atlas.png\")\r\n            .add(\"img/icon_animations_1.json\")\r\n            .add(\"img/icon_animations_1.png\")\r\n            .add(\"img/icon_animations_2.json\")\r\n            .add(\"img/icon_animations_2.png\")\r\n            .add(\"img/icon_animations_3.json\")\r\n            .add(\"img/icon_animations_3.png\")\r\n            .add(\"img/icon_animations_4.json\")\r\n            .add(\"img/icon_animations_4.png\")\r\n            .add(\"img/back.json\")\r\n            .add(\"img/back.png\")\r\n            .add(\"img/lightning.json\")\r\n            .add(\"img/lightning.png\")\r\n            .add(\"img/temp.json\")\r\n            .add(\"img/temp.png\")\r\n            //.add(\"img/dude_1_1.json\")\r\n            //.add(\"img/dude_1_1.png\")\r\n            //.add(\"img/dude_1_2.json\")\r\n            //.add(\"img/dude_1_2.png\")\r\n            //.add(\"img/dude_2_1.json\")\r\n            //.add(\"img/dude_2_1.png\")\r\n            //.add(\"img/dude_2_2.json\")\r\n            //.add(\"img/dude_2_2.png\")\r\n            .load(this.onAtlasLoaded);\r\n    }\r\n\r\n    onAtlasLoaded(){\r\n        self.textures = Object.assign({},\r\n            PIXI.loader.resources[\"img/description.json\"].textures,\r\n            PIXI.loader.resources[\"img/icon_animations_1.json\"].textures,\r\n            PIXI.loader.resources[\"img/icon_animations_2.json\"].textures,\r\n            PIXI.loader.resources[\"img/icon_animations_3.json\"].textures,\r\n            PIXI.loader.resources[\"img/icon_animations_4.json\"].textures,\r\n            PIXI.loader.resources[\"img/back.json\"].textures,\r\n            PIXI.loader.resources[\"img/lightning.json\"].textures,\r\n            PIXI.loader.resources[\"img/temp.json\"].textures,\r\n           // PIXI.loader.resources[\"img/dude_1_1.json\"].textures,\r\n            //PIXI.loader.resources[\"img/dude_1_2.json\"].textures,\r\n            //PIXI.loader.resources[\"img/dude_2_1.json\"].textures,\r\n            //PIXI.loader.resources[\"img/dude_2_2.json\"].textures\r\n        );\r\n\r\n        AppProxy.getInstance().assetsLoadedSignal.dispatch();\r\n    }\r\n\r\n    getIconAnimation(id){\r\n        var list = [];\r\n        for (let i = 0; i < 100; i++){\r\n            let name = \"icon\"+ id + \" (\" + (i) +\").png\";\r\n            if (self.textures.hasOwnProperty(name)){\r\n                list.push(self.textures[name]);\r\n            } else {\r\n                return list;\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getLightningAnimation(type){\r\n        let prefix = type ? \"_strong\" : \"_weak\";\r\n        var list = [];\r\n        for (let i = 0; i < 100; i++){\r\n            let name = \"lightning\" + prefix + \" (\" + (i) +\").png\";\r\n            if (self.textures.hasOwnProperty(name)){\r\n                list.push(self.textures[name]);\r\n            } else {\r\n                return list;\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getSparklesAnimation(){\r\n        let list = [];\r\n        for (let i = 0; i < 15; i++){\r\n            let name = \"sparkles (\" + i + \").png\";\r\n            list.push(self.textures[name]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getFramesAnimation(){\r\n        let list = [];\r\n        let i = 0;\r\n        let name = \"frame (\" + i + \").png\";\r\n        while (self.textures.hasOwnProperty(name)){\r\n            list.push(self.textures[name]);\r\n            name = \"frame (\" + ++i +\").png\";\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getLightningTubeTexture(){\r\n        return self.textures[\"tube.png\"];\r\n    }\r\n\r\n    getLightButtonTextures(dir){\r\n        let prefix = dir ? \"left\" : \"right\";\r\n        return [\r\n            self.textures[\"light_\" + prefix + \"_button_over.png\"],\r\n            self.textures[\"light_\" + prefix + \"_button_default.png\"],\r\n            self.textures[\"light_\" + prefix + \"_button_click.png\"],\r\n            self.textures[\"light_\" + prefix + \"_button_disabled.png\"],\r\n        ];\r\n    }\r\n\r\n    getLinesButtonTextures(){\r\n        return [\r\n            self.textures[\"lines_button_over.png\"],\r\n            self.textures[\"lines_button_default.png\"],\r\n            self.textures[\"lines_button_click.png\"],\r\n            self.textures[\"lines_button_disabled.png\"]\r\n        ];\r\n    }\r\n\r\n    getSliderButtonTextures(){\r\n        return [\r\n            self.textures[\"slider_button_over.png\"],\r\n            self.textures[\"slider_button_default.png\"],\r\n            self.textures[\"slider_button_click.png\"],\r\n            self.textures[\"slider_button_disabled.png\"]\r\n        ];\r\n    }\r\n\r\n    getSpinButtonTextures(){\r\n        return [\r\n            self.textures[\"spin_button_default.png\"],\r\n            self.textures[\"spin_button_over.png\"],\r\n            self.textures[\"spin_button_click.png\"],\r\n            self.textures[\"spin_button_disabled.png\"]\r\n        ];\r\n    }\r\n\r\n    getStartButtonTextures(){\r\n        return [\r\n            self.textures[\"start_button_default.png\"],\r\n            self.textures[\"start_button_over.png\"],\r\n            self.textures[\"start_button_click.png.png\"],\r\n            self.textures[\"start_button_disabled.png\"]\r\n        ];\r\n    }\r\n\r\n    getStopButtonTextures(){\r\n        return [\r\n            self.textures[\"stop_button_over.png\"],\r\n            self.textures[\"stop_button_default.png\"],\r\n            self.textures[\"stop_button_click.png\"],\r\n            self.textures[\"stop_button_disabled.png\"]\r\n        ]\r\n    }\r\n\r\n    getInfoButtonTextures(){\r\n        return [\r\n            self.textures[\"info_button_over.png\"],\r\n            self.textures[\"info_button_default.png\"],\r\n            self.textures[\"info_button_click.png\"],\r\n            self.textures[\"info_button_disabled.png\"]\r\n        ]\r\n    }\r\n\r\n    getIconTextures(){\r\n        return [\r\n            self.textures[\"icon0.png\"],\r\n            self.textures[\"icon1.png\"],\r\n            self.textures[\"icon2.png\"],\r\n            self.textures[\"icon3.png\"],\r\n            self.textures[\"icon4.png\"],\r\n            self.textures[\"icon5.png\"],\r\n            self.textures[\"icon6.png\"],\r\n            self.textures[\"icon7.png\"],\r\n            self.textures[\"icon8.png\"],\r\n            self.textures[\"icon9.png\"],\r\n        ];\r\n    }\r\n\r\n    getDudeTextures(id){\r\n        let list = [];\r\n        let i = 0;\r\n        let name = \"dude_\" + id + \" (\" + i + \").png\";\r\n        while (self.textures.hasOwnProperty(name)){\r\n            list.push(self.textures[name]);\r\n            name = \"dude_\" + id + \" (\" + ++i +\").png\";\r\n        }\r\n        return list;\r\n    }\r\n\r\n    getBackgroundTexture(){\r\n        return self.textures[\"301.png\"];\r\n    }\r\n\r\n    getBottomPanelTexture(){\r\n        return self.textures[\"bottom_layer.png\"];\r\n    }\r\n\r\n    getReelsBackgroundTexture(){\r\n        return self.textures[\"reels_background.png\"];\r\n    }\r\n\r\n    getWinTextBackgroundTexture(){\r\n        return self.textures[\"win_field.png\"]\r\n    }\r\n\r\n    getLinesBetBackgroundTexture(){\r\n        return self.textures[\"linebet_panel.png\"];\r\n    }\r\n\r\n    getTotalBetBackgroundTexture(){\r\n        return self.textures[\"totalbet_panel.png\"];\r\n    }\r\n}\r\n\r\nAssetsManager.getInstance = function(){\r\n    if (!this.instance){\r\n        this.instance = new this();\r\n    }\r\n    return this.instance;\r\n}\r\n","/**\r\n * Created by 1 on 30.12.2016.\r\n */\r\nexport class Background extends PIXI.Sprite{\r\n    constructor(texture){\r\n        super(texture);\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by Admin on 24.05.17.\r\n */\r\nimport {DisplayObject} from './../core/DisplayObject';\r\nimport {AssetsManager} from './AssetsManager';\r\nimport {AppModel} from './../AppModel';\r\n\r\nexport class BetPanel extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n        this.setLocation();\r\n    }\r\n\r\n    initialize(){\r\n        this.linebet = new PIXI.Sprite(new AssetsManager().getLinesBetBackgroundTexture());\r\n        this.addChild(this.linebet);\r\n        this.linebet.scale.y = 1.2;\r\n\r\n        this.lineText1 = this.getText(22);\r\n        this.lineText1 .y += -15;\r\n        this.lineText1 .x += -68;\r\n        this.addChild(this.lineText1);\r\n\r\n        this.lineText2 = this.getText(22);\r\n        this.lineText2 .y += -15;\r\n        this.lineText2 .x += -68 + 112;\r\n        this.lineText2.text = \"1\";\r\n        this.addChild(this.lineText2);\r\n\r\n\r\n        this.totalbet = new PIXI.Sprite(new AssetsManager().getTotalBetBackgroundTexture());\r\n        this.addChild(this.totalbet);\r\n        this.totalbet.y += 37;\r\n        this.totalbet.scale.y = 1.2;\r\n\r\n        this.betText = this.getText(24);\r\n        this.betText .y += 20;\r\n        this.betText .x += 15;\r\n        this.addChild(this.betText);\r\n\r\n        AppModel.getInstance().reelsFrozenUpdateSignal.add(\r\n            this.onReelsFrozenUpdate.bind(this));\r\n\r\n        this.onReelsFrozenUpdate();\r\n    }\r\n\r\n    onReelsFrozenUpdate(){\r\n        this.betText.text = AppModel.getInstance().getSpinPrice();\r\n    }\r\n\r\n    getText(fontSize){\r\n        let text = new PIXI.Text('000',\r\n            {\r\n                fontFamily : 'Arial',\r\n                fontSize: fontSize,\r\n                fill : 0x66DFF4,\r\n                align : 'center'\r\n            });\r\n        text.anchor.x = 0.5;\r\n        text.x = 160;\r\n        text.y = 31;\r\n        text.alpha = 0.8;\r\n        return text;\r\n        //addChild(this.text);\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 192;\r\n        this.y = 64;\r\n    }\r\n}\r\n","/**\r\n * Created by 1 on 29.12.2016.\r\n */\r\n\r\nimport {AssetsManager} from './AssetsManager';\r\nimport {SpinButton} from './buttons/SpinButton';\r\nimport {StopButton} from './buttons/StopButton';\r\nimport {StartButton} from './buttons/StartButton';\r\nimport {InfoButton} from './buttons/InfoButton';\r\nimport {LightPanel} from './LightPanel';\r\nimport {WinText} from './WinText';\r\nimport {BetPanel} from './BetPanel';\r\n\r\nexport class BottomPanel extends PIXI.Sprite{\r\n    constructor(texture){\r\n        super();\r\n        this.bgtexture = texture;\r\n        this.initialize();\r\n        this.setLocation();\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 30;\r\n        this.y = 590;\r\n    }\r\n\r\n    initialize(){\r\n        this.background = new PIXI.Sprite(this.bgtexture);\r\n        this.background.scale.x = 1.4;\r\n        this.background.scale.y = 1.6;\r\n        this.background.y -= 15;\r\n        this.background.alpha = 0.6;\r\n        this.addChild(this.background);\r\n\r\n        this.spinButton = new SpinButton(new AssetsManager().getSpinButtonTextures());\r\n        this.addChild(this.spinButton);\r\n\r\n        this.stopButton = new StopButton(new AssetsManager().getStopButtonTextures());\r\n        this.addChild(this.stopButton);\r\n\r\n        this.startButton = new StartButton(new AssetsManager().getStartButtonTextures());\r\n        this.addChild(this.startButton);\r\n\r\n        this.infoButton = new InfoButton(new AssetsManager().getInfoButtonTextures());\r\n        this.addChild(this.infoButton);\r\n\r\n        this.lightPanel = new LightPanel();\r\n        this.addChild(this.lightPanel);\r\n\r\n        this.winText = new WinText(new AssetsManager().getWinTextBackgroundTexture());\r\n        this.addChild(this.winText);\r\n\r\n        this.betPanel = new BetPanel();\r\n        this.addChild(this.betPanel);\r\n    }\r\n}\r\n","/**\r\n * Created by 1 on 31.12.2016.\r\n */\r\nexport class Constants{\r\n    constructor(){\r\n    }\r\n}\r\nexport default Constants;\r\n\r\n\r\nConstants.ICON_HEIGHT = 165;\r\nConstants.REEL_UPD_FREQ = 17;\r\nConstants.SPEED_LIMIT = 70;\r\nConstants.SPIN_TIME = 1500;\r\nConstants.JOINT_IDLE_TIME = 1000;\r\nConstants.DUDES_TIME = 3000;\r\nConstants.JOINT_ADD_TIME = 2000;\r\nConstants.LINE_DEF_DELAY = 3000;\r\nConstants.LINE_SHORT_DELAY = 2000;\r\nConstants.MAX_FROZEN_COUNT = 4;\r\nConstants.ANIMATION_DURATION_MAP =\r\n    [1,1,1,1,1,1,1.55,1.3,2.05,1.05];\r\n\r\nConstants.INIT_STATE = \"InitState\";\r\nConstants.IDLE_STATE = \"IdleState\";\r\nConstants.SPIN_START_STATE = \"SpinStartState\";\r\nConstants.SPIN_STOP_STATE = \"SpinStopState\";\r\nConstants.WIN_ANIMATION_STATE = \"WinAnimationState\";\r\n\r\n","/**\r\n * Created by Admin on 21.05.17.\r\n */\r\nimport {DisplayObject} from './../core/DisplayObject';\r\nimport {AssetsManager} from './AssetsManager';\r\nimport {Constants} from './Constants';\r\nimport {AppProxy} from './../AppProxy';\r\n\r\nexport class Frames extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        AppProxy.getInstance().frames = this;\r\n        this.points = [];\r\n        let xpos = [7, 192, 380, 566, 754, 938];\r\n        for (let i = 0; i < xpos.length; i++){\r\n            let list = [];\r\n            for (let j = 0; j < 3; j++){\r\n                let xp = xpos[i];\r\n                let yp = 42 + j * Constants.ICON_HEIGHT;\r\n                let point = {\"x\" : xp, \"y\" : yp};\r\n                list.push(point);\r\n            }\r\n            this.points.push(list);\r\n        }\r\n\r\n        this.movieclips = [];\r\n        for (let i = 0; i < xpos.length; i++){\r\n            let point = this.points[i][0];\r\n            let movieClip = new PIXI.extras.AnimatedSprite(\r\n                new AssetsManager().getFramesAnimation());\r\n            this.addChild(movieClip);\r\n            this.movieclips.push(movieClip);\r\n            movieClip.x = point.x;\r\n            movieClip.y = point.y;\r\n            movieClip.play();\r\n            movieClip.scale.x = 1.2;\r\n            movieClip.scale.y = 1.2;\r\n            movieClip.visible = false;\r\n        }\r\n    }\r\n\r\n    showLine(line){\r\n        for (let i = 0; i < line.length; i++){\r\n            let py = this.points[i][line[i]].y;\r\n            let px = this.points[i][0].x;\r\n            let clip = this.movieclips[i];\r\n            TweenLite.to(clip, 0.3, {y : py, x: px})\r\n            clip.visible = true;\r\n            clip.play();\r\n        }\r\n    }\r\n\r\n    setToCenter(){\r\n        for (let i = 0; i < this.movieclips.length; i++){\r\n            let clip = this.movieclips[i];\r\n            clip.x = 470;\r\n            clip.y = 42 + Constants.ICON_HEIGHT;\r\n        }\r\n    }\r\n\r\n    hideAll(){\r\n        for (let i = 0; i < this.movieclips.length; i++){\r\n            let clip = this.movieclips[i];\r\n            clip.visible = false;\r\n            clip.stop();\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nexport class Icon extends PIXI.extras.AnimatedSprite{\r\n    constructor(textures){\r\n        super(textures);\r\n        this.setFrame = this.setFrame.bind(this);\r\n    }\r\n\r\n    setRandomFrame(){\r\n        this.gotoAndStop(Icon.getRandomInt(0, this.textures.length - 1));\r\n    }\r\n\r\n    setFrame(frame){\r\n        if (frame < 0){\r\n            this.setRandomFrame();\r\n        } else {\r\n            this.gotoAndStop(frame);\r\n        }\r\n    }\r\n\r\n    static getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by Admin on 08.05.17.\r\n */\r\n\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {AssetsManager} from '../components/AssetsManager';\r\nimport {Constants} from './Constants';\r\n\r\nexport class IconAnimation extends DisplayObject {\r\n    constructor(i, j){\r\n        super();\r\n        this.i = i;\r\n        this.j = j;\r\n\r\n        this.initialize();\r\n        this.setLocation();\r\n\r\n        //document.addEventListener(\"keyup\", this.onKeyUp.bind(this));\r\n    }\r\n\r\n    initialize(){\r\n        let textures = new AssetsManager().getIconAnimation(0);\r\n        this.container = new PIXI.extras.AnimatedSprite(textures);\r\n        this.container.visible = false;\r\n        this.container.animationSpeed = 0.5;\r\n        this.addChild(this.container);\r\n\r\n        this.locationMap = [\r\n            [53,25], [53,25], [14,27], [52,24], [18,27],\r\n            [53,26], [-33,-7],[-31,-5],[-42,-2],[-21,-15]\r\n        ];\r\n    }\r\n\r\n    setLocation(){\r\n        this.defaultX = this.i * 185 - 100; if (this.i > 2) this.defaultX += 5;\r\n        this.defaultY = this.j * Constants.ICON_HEIGHT + 70;\r\n        this.x = this.defaultX;\r\n        this.y = this.defaultY;\r\n    }\r\n\r\n    prepare(id){\r\n        this.container.textures = new AssetsManager().getIconAnimation(id);\r\n        this.container.updateTexture();\r\n        this.x = this.defaultX + this.locationMap[id][0];\r\n        this.y = this.defaultY + this.locationMap[id][1];\r\n    }\r\n\r\n    play(id){\r\n        this.container.visible = true;\r\n        this.container.play();\r\n    }\r\n\r\n    stop(){\r\n        this.container.visible = false;\r\n        this.container.gotoAndStop(0);\r\n    }\r\n\r\n    hide(){\r\n        this.container.visible = false;\r\n    }\r\n\r\n    /*\r\n     onKeyUp(event){\r\n     var code = event.keyCode;\r\n     if (code == 37){\r\n     this.dx -= 1;\r\n     this.x -=1;\r\n     }\r\n     if (code == 38){\r\n     this.dy -= 1;\r\n     this.y -=1;\r\n     }\r\n     if (code == 39){\r\n     this.dx += 1;\r\n     this.x +=1;\r\n     }\r\n     if (code == 40){\r\n     this.dy += 1;\r\n     this.y +=1;\r\n     }\r\n     if (code == 13){\r\n     alert(\"x:\"+this.dx +\":y:\"+this.dy);\r\n     }\r\n     }\r\n     */\r\n}\r\n","/**\r\n * Created by Admin on 08.05.17.\r\n */\r\n\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {IconAnimation} from './IconAnimation';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {AppModel} from '../AppModel';\r\nimport {Constants} from './Constants';\r\n\r\nexport class IconAnimations extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n        this.setLocation();\r\n        AppProxy.getInstance().iconAnimations = this;\r\n    }\r\n\r\n    initialize(){\r\n        this.animationsList = [];\r\n        this.animationsMatrix = [];\r\n        this.linesIndex = 0;\r\n        this.lineDelay = Constants.LINE_DEF_DELAY;\r\n        this.timeout = null;\r\n\r\n        for (let i = 0; i < 6; i++){\r\n            let list = [];\r\n            for (let j = 0; j < 3; j++){\r\n                let animation = new IconAnimation(i, j);\r\n                this.addChild(animation);\r\n                this.animationsList.push(animation);\r\n                list.push(animation);\r\n            }\r\n            this.animationsMatrix.push(list);\r\n        }\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 160;\r\n        this.y = 20;\r\n    }\r\n\r\n    prepareAnimation(){\r\n        let combination = AppModel.getInstance().combination;\r\n        for (let i = 0; i < 6; i++){\r\n            for (let j = 0; j < 3; j++){\r\n                this.animationsMatrix[i][j].prepare(combination[i][j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    playAnimation(){\r\n        let lines = AppModel.getInstance().lines;\r\n        let combination = AppModel.getInstance().combination;\r\n        AppProxy.getInstance().frames.setToCenter();\r\n        this.linesIndex = 0;\r\n        if (lines.length){\r\n             this.playNext(lines, combination);\r\n        }\r\n    }\r\n\r\n   // getLinesDiff(lines){\r\n       // for (let i = 0; )\r\n   // }\r\n\r\n    playNext(lines, combination){\r\n        let line = lines[this.linesIndex];\r\n        this.stopAnimation();\r\n        this.showFrames(line);\r\n        this.hideIcons(line);\r\n        for (let i = 0; i < line.length; i++){\r\n            this.animationsMatrix[i][line[i]].play(combination[i][line[i]]);\r\n        }\r\n        if (this.linesIndex < lines.length - 1){\r\n            this.linesIndex++;\r\n        } else {\r\n            this.linesIndex = 0;\r\n            this.lineDelay = Constants.LINE_SHORT_DELAY;\r\n        }\r\n\r\n        this.lineDelay = Constants.ANIMATION_DURATION_MAP[this.__getLineId(line,combination)] * 1000;\r\n        this.timeout = setTimeout(this.playNext.bind(this), this.lineDelay, lines, combination);\r\n    }\r\n\r\n//TODO transfer this shit to server\r\n    __getLineId(line, combination){\r\n        let list = [];\r\n        for (let i = 0; i < line.length; i++){\r\n            list.push(combination[i][line[i]]);\r\n        }\r\n        list = list.sort();\r\n        return list[0];\r\n    }\r\n\r\n    stopAnimation(){\r\n        for (let i = 0; i < this.animationsList.length; i++){\r\n            this.animationsList[i].stop();\r\n        }\r\n        AppProxy.getInstance().frames.hideAll();\r\n        let icons = AppProxy.getInstance().reels.getAllIconsMatrix();\r\n        for (let i = 0; i < icons.length; i++){\r\n            for (let j = 0; j < icons[i].length; j++){\r\n                icons[i][j].visible = true;\r\n                icons[i][j].alpha = 1;\r\n            }\r\n        }\r\n        clearTimeout(this.timeout);\r\n        this.timeout = null;\r\n    }\r\n\r\n    hideIcons(line){\r\n        let icons = AppProxy.getInstance().reels.getAllIconsMatrix();\r\n\r\n        for (let i = 0; i < icons.length; i++){\r\n            for (let j = 0; j < icons[i].length; j++){\r\n                icons[i][j].visible = true;\r\n                icons[i][j].alpha = 0.6;\r\n            }\r\n        }\r\n        for (let i = 0; i < line.length; i++){\r\n            icons[i][line[i]].visible = false;\r\n        }\r\n    }\r\n\r\n    showFrames(line){\r\n        AppProxy.getInstance().frames.hideAll();\r\n        AppProxy.getInstance().frames.showLine(line);\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 20.05.17.\r\n */\r\nimport {DisplayObject} from './../core/DisplayObject';\r\nimport {AssetsManager} from './AssetsManager';\r\n\r\nexport class IronDude extends DisplayObject{\r\n    constructor(index){\r\n        super();\r\n        this.index = index;\r\n        this.initialize();\r\n        this.setLocation();\r\n    }\r\n\r\n    setLocation(){\r\n        if (this.index == 1){\r\n            this.x = 24;\r\n        } else {\r\n            this.x = 916;\r\n        }\r\n        this.y = 97;\r\n    }\r\n\r\n    initialize(){\r\n        let textures = new AssetsManager().getDudeTextures(this.index);\r\n        this.container = new PIXI.extras.AnimatedSprite(textures);\r\n        this.addChild(this.container);\r\n        this.container.visible = false;\r\n        this.container.loop = false;\r\n        this.container.animationSpeed = 0.5;\r\n        this.container.onComplete = this.onAnimationComplete.bind(this);\r\n        this.animationCompleteSignal = new signals.Signal();\r\n    }\r\n\r\n    onAnimationComplete(){\r\n        this.animationCompleteSignal.dispatch();\r\n    }\r\n\r\n    show(){\r\n        this.container.visible = true;\r\n        this.container.gotoAndStop(0);\r\n        this.container.play(false);\r\n    }\r\n\r\n    hide(){\r\n        this.container.visible = false;\r\n        this.container.stop();\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 20.05.17.\r\n */\r\nimport {DisplayObject} from './../core/DisplayObject';\r\nimport {IronDude} from './IronDude';\r\nimport {AppProxy} from './../AppProxy';\r\n\r\n\r\nexport class IronDudes extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        AppProxy.getInstance().ironDudes = this;\r\n\r\n        this.firstDude = new IronDude(1);\r\n        this.addChild(this.firstDude);\r\n\r\n        this.secondDude = new IronDude(2);\r\n        this.addChild(this.secondDude);\r\n    }\r\n\r\n    show(){\r\n        this.firstDude.show();\r\n        this.secondDude.show();\r\n        this.firstDude.animationCompleteSignal.addOnce(this.hide.bind(this));\r\n        AppProxy.getInstance().lightning.hideSide();\r\n        let reels = AppProxy.getInstance().reels.getReels();\r\n        TweenLite.to([reels[0], reels[5]], 1, {alpha : 0});\r\n    }\r\n\r\n    hide(){\r\n        this.firstDude.hide();\r\n        this.secondDude.hide();\r\n        AppProxy.getInstance().lightning.showSide();\r\n        let reels = AppProxy.getInstance().reels.getReels();\r\n        TweenLite.to([reels[0], reels[5]], 0.5, {alpha : 1});\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 09.05.17.\r\n */\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {AssetsManager} from './AssetsManager';\r\nimport {StateMachine} from '../states/StateMachine';\r\nimport {Constants} from './Constants';\r\n\r\nexport class LightComponent extends DisplayObject{\r\n    constructor(index){\r\n        super();\r\n        this.index = index;\r\n        this.frozen = false;\r\n        this.tween = null;\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        this.movieTextures = [\r\n            new AssetsManager().getLightningAnimation(0),\r\n            new AssetsManager().getLightningAnimation(1)\r\n        ];\r\n        this.movieClip = new PIXI.extras.AnimatedSprite(this.movieTextures[0]);\r\n        this.addChild(this.movieClip);\r\n        this.movieClip.x = 100 + (this.index * 185);\r\n        this.movieClip.y = 90;\r\n        this.movieClip.scale.y = 1.13;\r\n        this.movieClip.visible = false;\r\n\r\n        let tubeTexture = new AssetsManager().getLightningTubeTexture();\r\n        this.sprite = new PIXI.Sprite(tubeTexture);\r\n        this.sprite.scale.y = -1;\r\n        this.sprite.x = 80 + (this.index * 185);\r\n        this.sprite.y = -100;\r\n        this.addChild(this.sprite);\r\n\r\n        StateMachine.getInstance().stateChangeSignal.add(\r\n            this.onStateChange.bind(this));\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.movieClip.textures = this.movieTextures[1];\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                this.movieClip.textures = this.movieTextures[0];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    show(){\r\n        if (!this.frozen){\r\n            this.tween = TweenLite.to(this.sprite, 0.2, {y : 105,\r\n                onComplete : this.onShowComplete.bind(this)});\r\n        }\r\n    }\r\n\r\n    onShowComplete(){\r\n        if (!this.frozen){\r\n            this.movieClip.visible = true;\r\n            this.movieClip.play();\r\n        }\r\n    }\r\n\r\n    hide(force = false){\r\n        if (!this.frozen || force == true){\r\n            TweenLite.to(this.sprite, 0.2, {y : -105});\r\n            this.movieClip.stop();\r\n            this.movieClip.visible = false;\r\n            if (this.tween){\r\n                this.tween.kill();\r\n            }\r\n        }\r\n    }\r\n\r\n    hideLight(){\r\n        this.movieClip.visible = false;\r\n    }\r\n\r\n    showLight(){\r\n        this.movieClip.visible = true;\r\n    }\r\n\r\n    freeze(){\r\n        if (this.sprite.y < 0){\r\n            this.sprite.y = 105;\r\n        }\r\n        this.movieClip.textures = this.movieTextures[0];\r\n        this.movieClip.visible = true;\r\n        this.movieClip.play();\r\n        this.frozen = true;\r\n    }\r\n\r\n    unfreeze(){\r\n        this.movieClip.stop();\r\n        this.movieClip.visible = false;\r\n        this.movieClip.textures = this.movieTextures[0];\r\n        TweenLite.to(this.sprite, 0.2, {y : -105});\r\n        this.frozen = false;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 09.05.17.\r\n */\r\nimport {LightButton} from './buttons/LightButton';\r\nimport {AssetsManager} from './AssetsManager';\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {StateMachine} from '../states/StateMachine';\r\nimport {Constants} from './Constants';\r\nimport {AppModel} from './../AppModel';\r\n\r\nexport class LightPanel extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        AppProxy.getInstance().lightPanel = this;\r\n\r\n        this.lightButtons = [];\r\n        for (let i = 0; i < 6; i++){\r\n            let dir = i < 3 ? 1 : 0;\r\n            let button = new LightButton(new AssetsManager().getLightButtonTextures(dir), i);\r\n            this.lightButtons.push(button);\r\n            this.addChild(button);\r\n            button.overSignal.add(this.onButtonOver.bind(this));\r\n            button.outSignal.add(this.onButtonOut.bind(this));\r\n            button.clickSignal.add(this.onButtonClick.bind(this));\r\n        }\r\n        this.buttonOverSignal = new signals.Signal();\r\n        this.buttonOutSignal = new signals.Signal();\r\n        this.buttonClickSignal = new signals.Signal();\r\n\r\n        AppModel.getInstance().reelsFrozenUpdateSignal.add(\r\n            this.reelsFrozenCountUpdate.bind(this));\r\n\r\n        StateMachine.getInstance().stateChangeSignal.add(\r\n            this.onStateChange.bind(this));\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName())\r\n        {\r\n            case (Constants.IDLE_STATE):\r\n            case(Constants.WIN_ANIMATION_STATE):{\r\n                this.reelsFrozenCountUpdate();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    lockButtons(){\r\n        for (let i = 0; i < 6; i++){\r\n            let button = this.lightButtons[i];\r\n            if (!button.selected){\r\n                button.lock();\r\n            }\r\n        }\r\n    }\r\n\r\n    unlockButtons(){\r\n        let freezable = AppModel.getInstance().freezable;\r\n        for (let i = 0; i < 6; i++){\r\n            let button = this.lightButtons[i];\r\n            if (!button.selected && freezable[i]){\r\n                button.unlock();\r\n            }\r\n        }\r\n    }\r\n\r\n    reelsFrozenCountUpdate(){\r\n        let frozenCount = AppModel.getInstance().getFrozenReelsCount();\r\n        if (frozenCount == Constants.MAX_FROZEN_COUNT){\r\n            AppProxy.getInstance().lightPanel.lockButtons();\r\n        } else {\r\n            AppProxy.getInstance().lightPanel.unlockButtons();\r\n        }\r\n    }\r\n\r\n    onButtonOver(index){\r\n        this.buttonOverSignal.dispatch(index);\r\n    }\r\n\r\n    onButtonOut(index){\r\n        this.buttonOutSignal.dispatch(index);\r\n    }\r\n\r\n    onButtonClick(index){\r\n        this.buttonClickSignal.dispatch(index);\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 09.05.17.\r\n */\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {AssetsManager} from '../components/AssetsManager';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {LightComponent} from './LightComponent';\r\nimport {AppModel} from '../AppModel';\r\nimport {StateMachine} from '../states/StateMachine';\r\nimport {Constants} from './Constants';\r\n\r\nexport class Lightning extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName())\r\n        {\r\n            case(Constants.WIN_ANIMATION_STATE):{\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    initialize(){\r\n        AppProxy.getInstance().lightning = this;\r\n        this.createComponents();\r\n        AppProxy.getInstance().lightPanel.buttonOverSignal.add(\r\n            this.onPanelButtonOver.bind(this));\r\n        AppProxy.getInstance().lightPanel.buttonOutSignal.add(\r\n            this.onPanelButtonOut.bind(this));\r\n        AppProxy.getInstance().lightPanel.buttonClickSignal.add(\r\n            this.onPanelButtonClick.bind(this));\r\n    }\r\n\r\n    createComponents(){\r\n        this.components = [];\r\n        for (let i = 0; i < 6; i++){\r\n            let component = new LightComponent(i);\r\n            this.components.push(component);\r\n            this.addChild(component);\r\n        }\r\n    }\r\n\r\n    hideSide(){\r\n        this.components[0].hideLight();\r\n        this.components[this.components.length - 1].hideLight();\r\n    }\r\n\r\n    showSide(){\r\n        this.components[0].showLight();\r\n        this.components[this.components.length - 1].showLight();\r\n    }\r\n\r\n    hideAll(){\r\n        for (let i = 0; i < 6; i++){\r\n            let component = this.components[i];\r\n            component.hide(true);\r\n        }\r\n    }\r\n\r\n    onPanelButtonOver(index){\r\n        this.components[index].show();\r\n    }\r\n\r\n    onPanelButtonOut(index){\r\n        this.components[index].hide();\r\n    }\r\n\r\n    onPanelButtonClick(index){\r\n        if (this.components[index].frozen){\r\n            this.components[index].unfreeze();\r\n            AppModel.getInstance().freezeReel(index, false);\r\n        } else {\r\n            this.components[index].freeze();\r\n            AppModel.getInstance().freezeReel(index, true);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 10.05.17.\r\n */\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {Constants} from './Constants';\r\nimport {LinesButton} from '../components/buttons/LinesButton';\r\nimport {AssetsManager} from './AssetsManager';\r\nimport {Slider} from './Slider';\r\nimport {Frames} from './Frames';\r\nimport {AppModel} from '../AppModel';\r\nimport {AppProxy} from '../AppProxy';\r\n\r\nexport class Lines extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        AppProxy.getInstance().lines = this;\r\n\r\n        this.points = [];\r\n        for (let i = 0; i < 6; i++){\r\n            let list = [];\r\n            for (let j = 0; j < 3; j++){\r\n                let xp = i * 185 + 160;\r\n                let yp = j * Constants.ICON_HEIGHT + 190;\r\n                let point = {\"x\" : xp, \"y\" : yp};\r\n                list.push(point);\r\n            }\r\n            this.points.push(list);\r\n        }\r\n\r\n        this.graphics = new PIXI.Graphics();\r\n        this.graphics.clear();\r\n        this.addChild(this.graphics);\r\n\r\n        this.slider = new Slider();\r\n        this.addChild(this.slider);\r\n        this.slider.x = 1190;\r\n        this.slider.y = 90;\r\n        this.slider.valueUpdateSignal.add(this.onSliderValueUpdate.bind(this));\r\n        this.slider.loseFocusSignal.add(this.onSliderLoseFocus.bind(this));\r\n\r\n        this.frames = new Frames(this.points);\r\n        this.addChild(this.frames);\r\n    }\r\n\r\n    drawLine(list){\r\n        let point = this.points[0][list[0]];\r\n        this.graphics.clear();\r\n        this.graphics.lineStyle(5, 0x9C8137);\r\n        this.graphics.moveTo(point.x, point.y);\r\n\r\n        for (let i = 1; i < list.length; i++){\r\n            point = this.points[i][list[i]];\r\n            this.graphics.lineTo(point.x, point.y);\r\n        }\r\n    }\r\n\r\n    showLines(){\r\n        //this.frames.showLine(AppModel.getInstance().lines[0]);\r\n    }\r\n\r\n    hideLines(){\r\n        this.graphics.clear();\r\n    }\r\n\r\n    onSliderLoseFocus(){\r\n        this.hideLines();\r\n    }\r\n\r\n    onSliderValueUpdate(value){\r\n        //this.drawLine(AppModel.LINES_MAP[value]);\r\n    }\r\n}\r\n","import {AssetsManager} from './AssetsManager';\r\nimport {AppProxy} from './../AppProxy';\r\nimport {Constants} from './Constants';\r\nimport {Icon} from './Icon';\r\nimport {Utils} from './Utils';\r\nimport {DisplayObject} from '../core/DisplayObject';\r\n\r\nexport class Reel extends DisplayObject{\r\n    constructor(combination){\r\n        super();\r\n\r\n        this.combination = combination;\r\n        this.inJoint = false;\r\n\r\n        this.initialize();\r\n\r\n        this.startSpin = this.startSpin.bind(this);\r\n        this.stopSpin = this.stopSpin.bind(this);\r\n        this.onStopSpinUpdate = this.onStopSpinUpdate.bind(this);\r\n        this.onStopSpinComplete = this.onStopSpinComplete.bind(this);\r\n        this.stopSpinCompleteSignal = new signals.Signal();\r\n    }\r\n\r\n    initialize(){\r\n        this.createIcons();\r\n    }\r\n\r\n    createIcons(){\r\n        this.icons = [];\r\n        let textures = new AssetsManager().getIconTextures();\r\n        for (let i = 0; i < 5; i++){\r\n            let icon = new Icon(textures);\r\n            this.addChild(icon);\r\n            this.icons.push(icon);\r\n            icon.y = (i - 1) * (Constants.ICON_HEIGHT);\r\n            if (i > 0 && i < 4){\r\n                icon.setFrame(this.combination[i - 1])\r\n            } else {\r\n                icon.setRandomFrame();\r\n            }\r\n        }\r\n    }\r\n\r\n    startSpin(){\r\n        this.speed =  this.dy = this.ypos = 0;\r\n        this.stops = false;\r\n        this.stopIcons = null;\r\n        this.limit = Constants.ICON_HEIGHT * 4;\r\n        this.spinning = true;\r\n\r\n        TweenLite.to(this, 0.5, { speed:Constants.SPEED_LIMIT, ease: Back.easeIn });\r\n    }\r\n\r\n\r\n    stopSpin(combination){\r\n        this.stopIcons = combination;\r\n        TweenLite.to(this, 0.4, { speed:25 });\r\n    }\r\n\r\n    immediateStopSpin(combination){\r\n        this.spinning = false;\r\n        this.setFinalPositions();\r\n        if (this.stopTween){\r\n            this.stopTween.kill();\r\n        }\r\n        for (let i = 0; i < 3; i++){\r\n            let icon = this.icons[i];\r\n            icon.setFrame(combination[i]);\r\n        }\r\n        this.stopSpinCompleteSignal.dispatch();\r\n    }\r\n\r\n    update(){\r\n        if (!this.spinning) return;\r\n\r\n        if (this.stopIcons && this.stopIcons.length == 0){\r\n            if (this.stops){\r\n                return;\r\n            }\r\n            this.stops = true;\r\n            this.stopTween = TweenLite.to(this, 0.5, {ypos : Constants.ICON_HEIGHT - Utils.get0delta(this.icons),\r\n                onUpdate: this.onStopSpinUpdate.bind(this),\r\n                onComplete : this.onStopSpinComplete.bind(this),\r\n                ease:  Back.easeOut.config(3.7)});\r\n            return;\r\n        }\r\n\r\n        let delta = this.speed;\r\n\r\n        for (let i = 0; i < 5; i++){\r\n            let icon = this.icons[i];\r\n\r\n            icon.y += delta;\r\n            if (icon.y > this.limit){\r\n                icon.y -= Constants.ICON_HEIGHT * 5;\r\n\r\n                if (this.stopIcons){\r\n                    icon.setFrame(this.stopIcons.shift());\r\n                } else {\r\n                    if (this.inJoint){\r\n                        icon.setFrame(AppProxy.getInstance().reelJoint.getRandomIcon());\r\n                    } else {\r\n                        icon.setRandomFrame();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onStopSpinUpdate(){\r\n        let delta = this.ypos - this.dy;\r\n        for (let i = 0; i < 5; i++) {\r\n            let icon = this.icons[i];\r\n            icon.y += delta;\r\n        }\r\n        this.dy = this.ypos;\r\n    }\r\n\r\n    onStopSpinComplete(){\r\n        this.spinning = false;\r\n        this.setFinalPositions();\r\n        this.stopSpinCompleteSignal.dispatch();\r\n    }\r\n\r\n    setFinalPositions(){\r\n        this.icons.sort(function(a, b){\r\n            if (a.y > b.y) return 1;\r\n            if (a.y < b.y) return -1;\r\n        });\r\n\r\n        for (let i = 0; i < this.icons.length; i++){\r\n            this.icons[i].y = i * Constants.ICON_HEIGHT;\r\n        }\r\n        this.icons[this.icons.length - 1].y = -Constants.ICON_HEIGHT;\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by Admin on 16.05.17.\r\n */\r\nimport {AppProxy} from './../AppProxy';\r\nimport {Constants} from './../components/Constants';\r\nimport {StateMachine} from './../states/StateMachine';\r\n\r\nexport class ReelJoint{\r\n    constructor(){\r\n        AppProxy.getInstance().reelJoint = this;\r\n        this.reels = [];\r\n        this.leftReelIds = [];\r\n        this.reelAddIcons = [];\r\n        this.iconsPool = [];\r\n        this.timeout = null;\r\n        StateMachine.getInstance().stateChangeSignal.add(this.onStateChange.bind(this));\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName())\r\n        {\r\n            case(Constants.WIN_ANIMATION_STATE):\r\n            case(Constants.IDLE_STATE):{\r\n                clearTimeout(this.timeout);\r\n                this.hideSparkles();\r\n                this.updateReelJointValues(false);\r\n                this.reels.length = 0;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    start(reelIds){\r\n        ReelJoint.shuffleArray(reelIds);\r\n        this.setReelAddIconsCount(reelIds);\r\n        let currentIds = reelIds.splice(0, 2);\r\n        this.leftReelIds = reelIds;\r\n        this.timeout = setTimeout(this.addReels.bind(this, currentIds),\r\n            Constants.JOINT_IDLE_TIME);\r\n    }\r\n\r\n    addReels(reelIds){\r\n        this.updateReels(reelIds);\r\n        this.showSparkles(reelIds);\r\n        this.updateReelJointValues(true);\r\n        this.updateIconsPool();\r\n\r\n        if (this.leftReelIds.length){\r\n            this.timeout = setTimeout(this.addReels.bind(this, [this.leftReelIds.shift()]),\r\n                Constants.JOINT_ADD_TIME);\r\n        }\r\n    }\r\n\r\n    showSparkles(reelIds){\r\n        for (let i = 0; i < reelIds.length; i++){\r\n            AppProxy.getInstance().sparkles.show(reelIds[i]);\r\n        }\r\n    }\r\n\r\n    hideSparkles(){\r\n        AppProxy.getInstance().sparkles.hideAll();\r\n    }\r\n\r\n    updateReels(reelIds){\r\n        let reels = AppProxy.getInstance().reels.getReels();\r\n        for (let i = 0; i < reelIds.length; i++){\r\n            this.reels.push(reels[reelIds[i]]);\r\n        }\r\n    }\r\n\r\n    updateReelJointValues(value){\r\n        for (let i = 0; i < this.reels.length; i++){\r\n            this.reels[i].inJoint = value;\r\n        }\r\n    }\r\n\r\n    updateIconsPool(){\r\n        this.iconsPool = [];\r\n        let iconId = ReelJoint.getRandomInt(0, 9);\r\n        for (let i = 0; i < this.reels.length; i++){\r\n            this.iconsPool.push(iconId);\r\n        }\r\n    }\r\n\r\n    getRandomIcon(){\r\n        if (!this.iconsPool.length){\r\n            this.updateIconsPool();\r\n        }\r\n        return this.iconsPool.shift();\r\n    }\r\n\r\n    setReelAddIconsCount(reelIds){\r\n       this.reelAddIcons = [];\r\n       let last = reelIds[reelIds.length - 1];\r\n       for (let i = 0; i < 6; i++){\r\n           if (reelIds.indexOf(i) > -1){\r\n               this.reelAddIcons.push(last);\r\n           } else {\r\n               this.reelAddIcons.push(i);\r\n           }\r\n       }\r\n    }\r\n\r\n    getReelAddIconsCount(index){\r\n        return this.reelAddIcons[index];\r\n    }\r\n\r\n    static getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    static shuffleArray(array) {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    }\r\n}\r\n","import {Reel} from './Reel';\r\nimport {StateMachine} from './../states/StateMachine';\r\nimport {Constants} from './Constants';\r\nimport {AppModel} from './../AppModel';\r\nimport {AppProxy} from './../AppProxy';\r\nimport {DisplayObject} from '../core/DisplayObject'\r\nimport {ReelJoint} from './ReelJoint';\r\n\r\nexport class Reels extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        AppProxy.getInstance().reels = this;\r\n        this.setLocation();\r\n        this.createReels();\r\n        this.reelsStopped = 0;\r\n        this.reelsFrozenCount = 0;\r\n        AppProxy.getInstance().immediateStopSpinSignal.add(\r\n            this.immediateStopSpin.bind(this));\r\n        this.reelJoint = new ReelJoint();\r\n    }\r\n\r\n    stopSpin(){\r\n        let combination = AppModel.getInstance().combination;\r\n        for (let i = 0; i < this.reels.length; i++){\r\n            if (!AppModel.getInstance().reelsFrozen[i]){\r\n                let list = this.getAddStopIcons(i);\r\n                this.reels[i].stopSpin((combination[i].concat(list).reverse()));\r\n            }\r\n        }\r\n    }\r\n\r\n    getAddStopIcons(index){\r\n        if (this.reels[index].inJoint){\r\n            return new Array(this.reelJoint.getReelAddIconsCount(index)).fill(null);\r\n        }\r\n        return new Array(index).fill(null);\r\n    }\r\n\r\n    immediateStopSpin(){\r\n        let combination = AppModel.getInstance().combination;\r\n        for (let i = 0; i < this.reels.length; i++){\r\n            if (!AppModel.getInstance().reelsFrozen[i]){\r\n                this.reels[i].immediateStopSpin(combination[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    onReelSpinStopComplete(reel){\r\n        this.reelsStopped++;\r\n        if (this.reelsStopped == this.reelsUnfrozenCount){\r\n            AppProxy.getInstance().stopSpinSignal.dispatch();\r\n            this.getAllIconsMatrix()\r\n        }\r\n    }\r\n\r\n    startSpin(){\r\n        for (let i = 0; i < this.reels.length; i++){\r\n            if (!AppModel.getInstance().reelsFrozen[i]){\r\n                let reel = this.reels[i];\r\n                reel.startSpin();\r\n            }\r\n        }\r\n        this.reelsStopped = 0;\r\n        this.reelsUnfrozenCount = AppModel.getInstance().getUnfrozenReelsCount();\r\n    }\r\n\r\n    startJoint(){\r\n        let reelIds = AppModel.getInstance().reelsJoint.slice();\r\n        AppProxy.getInstance().reelJoint.start(reelIds);\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 60;\r\n        this.y = 90;\r\n    }\r\n\r\n    createReels(){\r\n        this.reels = [];\r\n        let combination = AppModel.getInstance().combination;\r\n        let offset = 185;\r\n        for (let i = 0; i < 6; i++){\r\n\r\n            var reel = new Reel(combination[i]);\r\n            reel.id = i;\r\n            this.reels.push(reel);\r\n            this.addChild(reel);\r\n            reel.x = offset * i; if (i > 2) reel.x += 5;\r\n            reel.stopSpinCompleteSignal.add(this.onReelSpinStopComplete.bind(this));\r\n        }\r\n    }\r\n\r\n    getAllIconsMatrix(){\r\n        let result = [];\r\n        for (let i = 0; i < this.reels.length; i++){\r\n            let list = [];\r\n            for (let j = 0; j < this.reels[i].icons.length - 2; j++){\r\n                let icon = this.reels[i].icons[j];\r\n                list.push(icon);\r\n            }\r\n            result.push(list);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getReels(){\r\n        return this.reels;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 05.05.17.\r\n */\r\n\r\n//, true);\r\n\r\nexport class ServiceProxy{\r\n    constructor(){\r\n        this.spinResponseSignal = new signals.Signal;\r\n        this.initResponseSignal = new signals.Signal;\r\n\r\n        this.request = new XMLHttpRequest();\r\n    }\r\n\r\n    sendSpinRequest(data){\r\n        this.request.open(\"POST\", ServiceProxy.REQUEST_URL + \"spin\", true);\r\n        this.request.setRequestHeader('Content-type', 'application/json');\r\n        this.request.onload = this.onSpinResponse.bind(this);\r\n        this.request.onerror = this.onSpinError.bind(this);\r\n        this.request.send(JSON.stringify(data));\r\n    }\r\n\r\n    onSpinResponse(){\r\n        var result = JSON.parse(this.request.responseText);\r\n        this.spinResponseSignal.dispatch(result);\r\n    }\r\n\r\n    onSpinError(){}\r\n\r\n    //-------------------------init----------------------------------------------//\r\n\r\n    sendInitRequest(data){\r\n        this.request.open(\"POST\", ServiceProxy.REQUEST_URL + \"init\", true);\r\n        this.request.setRequestHeader('Content-type', 'application/json');\r\n        this.request.onload = this.onInitResponse.bind(this);\r\n        this.request.onerror = this.onInitError.bind(this);\r\n        this.request.send(JSON.stringify(data));\r\n    }\r\n\r\n    onInitResponse(){\r\n        var result = JSON.parse(this.request.responseText);\r\n        this.initResponseSignal.dispatch(result);\r\n    }\r\n\r\n    onInitError(){}\r\n}\r\n\r\nServiceProxy.REQUEST_URL = //\"http://localhost:8080/\";\r\n    \"http://nodejs-mongo-persistent-test-project-cankillah1.1d35.starter-us-east-1.openshiftapps.com/\";\r\n\r\n//\"http://localhost:8080/\";\r\n","/**\r\n * Created by Admin on 12.05.17.\r\n */\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {SliderButton} from '../components/buttons/SliderButton';\r\nimport {AssetsManager} from '../components/AssetsManager';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {StateMachine} from '../states/StateMachine';\r\nimport {Constants} from './Constants';\r\n\r\nexport class Slider extends PIXI.Container{\r\n    constructor(){\r\n        super();\r\n        this.sliderHeight = 500;\r\n        this.value = 239;\r\n        this.locked = false;\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n        this.button = new SliderButton(new AssetsManager().getSliderButtonTextures());\r\n        this.addChild(this.button);\r\n\r\n        this.graphics = new PIXI.Graphics();\r\n        this.addChild(this.graphics);\r\n        this.redrawLine(false);\r\n\r\n        this.button.clickSignal.add(this.onButtonClick.bind(this));\r\n\r\n        this.valueUpdateSignal = new signals.Signal();\r\n        this.loseFocusSignal = new signals.Signal();\r\n\r\n        StateMachine.getInstance().stateChangeSignal.add(\r\n            this.onStateChange.bind(this));\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.lock();\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                this.unlock();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    redrawLine(active, locked = false){\r\n        let color = active ? 0x9C8137 : 0x468DBC; //\r\n        if (locked) color = 0x6B7B86;\r\n        this.graphics.clear();\r\n        this.graphics.lineStyle(5, color);\r\n        this.graphics.drawCircle(20, this.button.height/2, 3,3);\r\n        this.graphics.drawCircle(20, this.sliderHeight, 3,3);\r\n        this.graphics.moveTo(20, this.button.height/2);\r\n        this.graphics.lineTo(20, this.sliderHeight);\r\n    }\r\n\r\n    lock(){\r\n        this.button.lock();\r\n        this.redrawLine(false, true);\r\n        this.locked = true;\r\n    }\r\n\r\n    unlock(){\r\n        this.button.unlock();\r\n        this.redrawLine(false, false);\r\n        this.locked = false;\r\n    }\r\n\r\n    onButtonClick(){\r\n        if (this.locked) return;\r\n        this.button.mousemove = this.onMouseMove.bind(this);\r\n        AppProxy.getInstance().stage.mouseup = this.onMouseUp.bind(this);\r\n        AppProxy.getInstance().stage.mouseout = this.onMouseOut.bind(this);\r\n        this.redrawLine(true);\r\n    }\r\n\r\n    onMouseOut(){\r\n        if (this.locked) return;\r\n        this.button.mousemove = null;\r\n        this.button.setSelected(false);\r\n        this.redrawLine(false);\r\n        this.loseFocusSignal.dispatch();\r\n    }\r\n\r\n    onMouseUp(){\r\n        if (this.locked) return;\r\n        this.button.mousemove = null;\r\n        this.button.setSelected(false);\r\n        this.redrawLine(false);\r\n        this.loseFocusSignal.dispatch();\r\n    }\r\n\r\n    onMouseMove(event){\r\n        if (this.locked) return;\r\n        let ny = event.data.getLocalPosition(this).y - this.button.width/2;\r\n        this.setPosition(ny);\r\n        this.setValue();\r\n    }\r\n\r\n    setValue(){\r\n        let value = Math.round(239 * this.button.y/(this.sliderHeight-this.button.height/2));\r\n        //if (value == 0) value = 1;\r\n        if (this.value != value){\r\n            this.value = value;\r\n            this.valueUpdateSignal.dispatch(this.value);\r\n        }\r\n\r\n    }\r\n\r\n    setPosition(ny){\r\n        this.button.y = ny;\r\n        if (ny < 0){\r\n            this.button.y = 0;\r\n        }\r\n        if (ny > this.sliderHeight - this.button.height/2){\r\n            this.button.y = this.sliderHeight - this.button.height/2;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 16.05.17.\r\n */\r\nimport {DisplayObject} from '../core/DisplayObject';\r\nimport {AppProxy} from './../AppProxy';\r\nimport {AssetsManager} from './AssetsManager';\r\n\r\nexport class Sparkles extends DisplayObject{\r\n    constructor(){\r\n        super();\r\n        this.initialize();\r\n        AppProxy.getInstance().sparkles = this;\r\n    }\r\n\r\n    initialize(){\r\n        this.sparkles = [];\r\n        let textures = new AssetsManager().getSparklesAnimation();\r\n        for (let i = 0; i < 6; i++){\r\n            let sparkle = new PIXI.extras.AnimatedSprite(textures);\r\n            this.addChild(sparkle);\r\n            sparkle.x = 45 + (i * 185);\r\n            sparkle.y = 79;\r\n            sparkle.scale.x = 1.213;\r\n            sparkle.scale.y = 1.247;\r\n            sparkle.visible = false;\r\n            this.sparkles.push(sparkle);\r\n        }\r\n    }\r\n\r\n    show(index){\r\n        this.sparkles[index].visible = true;\r\n        this.sparkles[index].play();\r\n    }\r\n\r\n    hideAll(){\r\n        for (let i = 0; i < this.sparkles.length; i++){\r\n            this.sparkles[i].visible = false;\r\n            this.sparkles[i].stop();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Created by 1 on 03.01.2017.\r\n */\r\nexport class Utils{\r\n    constructor(){}\r\n\r\n    static get0delta(array){\r\n        var i = 0;\r\n        var minDiff = 1000;\r\n        var ans;\r\n        for(i in array)\r\n        {\r\n            var m = Math.abs(0 - array[i].y);\r\n            if(m < minDiff)\r\n            {\r\n                minDiff = m;\r\n                ans = array[i].y;\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by Admin on 17.05.17.\r\n */\r\nimport {DisplayObject} from './../core/DisplayObject';\r\nimport {StateMachine} from './../states/StateMachine';\r\nimport {Constants} from './Constants';\r\nimport {AppModel} from './../AppModel';\r\n\r\nexport class WinText extends DisplayObject{\r\n    constructor(texture){\r\n        super();\r\n\r\n        this.container = new PIXI.Sprite(texture);\r\n        this.addChild(this.container);\r\n\r\n        this.container.scale.x = 1.7;\r\n        this.container.scale.y = 1.7;\r\n\r\n        this.setLocation();\r\n\r\n        this.text = new PIXI.Text('0',\r\n            {\r\n                fontFamily : 'Arial',\r\n                fontSize: 40,\r\n                fill : 0x66DFF4,\r\n                align : 'center'\r\n            });\r\n        this.text.anchor.x = 0.5;\r\n        this.text.x = 160;\r\n        this.text.y = 31;\r\n        this.text.alpha = 0.7;\r\n        this.text.text = AppModel.getInstance().balance;\r\n        this.addChild(this.text);\r\n\r\n        this.textObject = {\"value\" : AppModel.getInstance().balance};\r\n\r\n        StateMachine.getInstance().stateChangeSignal.add(\r\n            this.onStateChange.bind(this));\r\n        AppModel.getInstance().balanceUpdateSignal.add(\r\n            this.onBalanceUpdate.bind(this));\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case(Constants.WIN_ANIMATION_STATE):\r\n            case(Constants.IDLE_STATE):{\r\n                //this.startWinAnimation();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onBalanceUpdate(value){\r\n        var currentBalance = Math.round(this.textObject.value);\r\n        if (value < currentBalance){\r\n            this.text.text = value;\r\n            this.textObject.value = value;\r\n        } else {\r\n            this.startWinAnimation();\r\n        }\r\n    }\r\n\r\n    startWinAnimation(){\r\n        TweenLite.to(this.textObject, 2, {\"value\" : AppModel.getInstance().balance,\r\n            onUpdate : this.onTweenUpdate.bind(this)});\r\n    }\r\n\r\n    onTweenUpdate(){\r\n        this.text.text = Math.round(this.textObject.value);\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 432;\r\n        this.y = 65;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 06.05.17.\r\n */\r\nimport {StateMachine} from '../../states/StateMachine.js';\r\nimport {AppProxy} from '../../AppProxy.js';\r\nimport {Constants} from '../Constants.js';\r\n\r\nexport class Button extends PIXI.extras.AnimatedSprite {\r\n    constructor(textures){\r\n        super(textures);\r\n        this.initialize();\r\n    }\r\n\r\n    onStateChange(state){}\r\n    setLocation(){}\r\n\r\n    initialize(){\r\n        this.interactive = true;\r\n        this.on('mouseover', this.onMouseOver.bind(this));\r\n        this.on('mouseout', this.onMouseOut.bind(this));\r\n        this.on('mousedown', this.onMouseDown.bind(this));\r\n        StateMachine.getInstance().stateChangeSignal.add(this.onStateChange.bind(this));\r\n    }\r\n\r\n    setActive(value){\r\n        this.interactive = value;\r\n        let v = value ? 0 : 3;\r\n        this.gotoAndStop(v);\r\n    }\r\n\r\n    setVisible(value){\r\n        this.visible = value;\r\n    }\r\n\r\n    onMouseOver(){\r\n        this.gotoAndStop(1);\r\n    }\r\n\r\n    onMouseOut(){\r\n        this.gotoAndStop(0);\r\n    }\r\n\r\n    onMouseDown(){\r\n        this.gotoAndStop(2);\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 24.05.17.\r\n */\r\nimport {Button} from './Button';\r\nimport {AppProxy} from '../../AppProxy';\r\nimport {Constants} from '../Constants';\r\n\r\nexport class InfoButton extends Button {\r\n    constructor(textures) {\r\n        super(textures);\r\n        this.setLocation();\r\n        this.setActive(false);\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 86;\r\n        this.y = 75;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 09.05.17.\r\n */\r\nimport {Constants} from '../Constants';\r\nimport {Button} from './Button';\r\nimport {StateMachine} from '../../states/StateMachine';\r\nimport {AppModel} from './../../AppModel';\r\n\r\nexport class LightButton extends Button{\r\n    constructor(textures, index){\r\n        super(textures);\r\n        this.index = index;\r\n        this.selected = false;\r\n        this.locked = false;\r\n        this.overSignal = new signals.Signal();\r\n        this.outSignal = new signals.Signal();\r\n        this.clickSignal = new signals.Signal();\r\n        this.setLocation();\r\n\r\n        StateMachine.getInstance().stateChangeSignal.add(\r\n            this.onStateChange.bind(this));\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.lock();\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n                this.lock();\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                if (AppModel.getInstance().freezable[this.index]){\r\n                    this.unlock();\r\n                    this.onMouseOut();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = this.index * 190 + 55;\r\n        this.y = 20;\r\n        this.scale.y = 0.6;\r\n        this.scale.x = 1.5;\r\n    }\r\n\r\n    onMouseOver(){\r\n        super.onMouseOver();\r\n        this.overSignal.dispatch(this.index);\r\n    }\r\n\r\n    onMouseOut(){\r\n        if (!this.selected){\r\n            this.gotoAndStop(0);\r\n            this.outSignal.dispatch(this.index);\r\n        } else {\r\n            this.gotoAndStop(2);\r\n        }\r\n    }\r\n\r\n    onMouseDown(){\r\n        super.onMouseDown();\r\n        this.selected = !this.selected;\r\n        this.clickSignal.dispatch(this.index);\r\n    }\r\n\r\n    lock(){\r\n        this.locked = true;\r\n        this.setActive(false);\r\n    }\r\n\r\n    unlock(){\r\n        this.locked = false;\r\n        this.setActive(true);\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 11.05.17.\r\n */\r\nimport {Button} from './Button';\r\n\r\nexport class LinesButton extends Button{\r\n    constructor(textures, index){\r\n        super(textures);\r\n\r\n        this.index = index;\r\n\r\n        this.overSignal = new signals.Signal();\r\n        this.outSignal = new signals.Signal();\r\n        this.clickSignal = new signals.Signal();\r\n    }\r\n\r\n    onMouseOver(){\r\n        super.onMouseOver();\r\n        this.overSignal.dispatch(this.index);\r\n    }\r\n\r\n    onMouseOut(){\r\n        if (!this.selected){\r\n            this.gotoAndStop(0);\r\n            this.outSignal.dispatch(this.index);\r\n        } else {\r\n            this.gotoAndStop(2);\r\n        }\r\n    }\r\n\r\n    onMouseDown(){\r\n        super.onMouseDown();\r\n        this.selected = !this.selected;\r\n        this.clickSignal.dispatch(this.index);\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 12.05.17.\r\n */\r\nimport {Button} from './Button';\r\n\r\nexport class SliderButton extends Button{\r\n    constructor(textures){\r\n        super(textures);\r\n\r\n        this.overSignal = new signals.Signal();\r\n        this.outSignal = new signals.Signal();\r\n        this.clickSignal = new signals.Signal();\r\n        this.selected = false;\r\n    }\r\n\r\n    onMouseOver(){\r\n        if (!this.selected){\r\n            super.onMouseOver();\r\n            this.overSignal.dispatch();\r\n        }\r\n    }\r\n\r\n    onMouseOut(){\r\n        if (!this.selected){\r\n            super.onMouseOut();\r\n            this.outSignal.dispatch();\r\n        }\r\n    }\r\n\r\n    lock(){\r\n        this.setActive(false);\r\n    }\r\n\r\n    unlock(){\r\n        this.setActive(true);\r\n    }\r\n\r\n    onMouseDown(){\r\n        super.onMouseDown();\r\n        this.selected = true;\r\n        this.clickSignal.dispatch();\r\n    }\r\n\r\n    setSelected(value){\r\n        this.selected = value;\r\n        this.onMouseOut();\r\n    }\r\n\r\n}\r\n","import {AppProxy} from '../../AppProxy';\r\nimport {Constants} from '../Constants';\r\nimport {Button} from './Button';\r\n\r\nexport class SpinButton extends Button {\r\n    constructor(textures){\r\n        super(textures);\r\n        this.setLocation();\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.setVisible(false);\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n                this.setVisible(false);\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):{\r\n                this.setActive(true);\r\n                this.setVisible(true);\r\n                break;\r\n            }\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                this.setVisible(true);\r\n                this.setActive(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 940;\r\n        this.y = 75;\r\n    }\r\n\r\n    onMouseDown(){\r\n        super.onMouseDown();\r\n        AppProxy.getInstance().startSpinSignal.dispatch();\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by Admin on 16.05.17.\r\n */\r\nimport {Button} from './Button';\r\nimport {AppProxy} from '../../AppProxy';\r\nimport {Constants} from '../Constants';\r\n\r\nexport class StartButton extends Button{\r\n    constructor(textures){\r\n        super(textures);\r\n        this.setLocation();\r\n        this.setActive(false);\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 780;\r\n        this.y = 75;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 06.05.17.\r\n */\r\nimport {StateMachine} from '../../states/StateMachine';\r\nimport {AppProxy} from '../../AppProxy';\r\nimport {Constants} from '../Constants';\r\nimport {Button} from './Button';\r\n\r\nexport class StopButton extends Button {\r\n    constructor(textures){\r\n        super(textures);\r\n        this.setLocation();\r\n    }\r\n\r\n    setLocation(){\r\n        this.x = 940;\r\n        this.y = 75;\r\n    }\r\n\r\n    onStateChange(state){\r\n        switch (state.getName()){\r\n            case (Constants.SPIN_START_STATE):{\r\n                this.setVisible(true);\r\n                this.setActive(false);\r\n                break;\r\n            }\r\n            case (Constants.SPIN_STOP_STATE):{\r\n                this.setVisible(true);\r\n                this.setActive(true);\r\n                break;\r\n            }\r\n            case (Constants.IDLE_STATE):{\r\n                this.setVisible(false);\r\n                break;\r\n            }\r\n            case (Constants.WIN_ANIMATION_STATE):{\r\n                this.setVisible(false);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseDown(){\r\n        super.onMouseDown();\r\n        AppProxy.getInstance().immediateStopSpinSignal.dispatch();\r\n    }\r\n\r\n}\r\n","/**\r\n * Created by Admin on 05.05.17.\r\n */\r\nimport {Renderer} from './Renderer.js';\r\n\r\nexport class DisplayObject extends PIXI.Sprite{\r\n    constructor(){\r\n        super();\r\n        Renderer.getInstance().onUpdateSignal.add(this.update.bind(this));\r\n    }\r\n\r\n    update(){}\r\n}\r\n","/**\r\n * Created by Admin on 05.05.17.\r\n */\r\nimport {AppProxy} from '../AppProxy';\r\n\r\nexport class Renderer{\r\n    constructor(){\r\n        this.initialize();\r\n    }\r\n\r\n    initialize(){\r\n\r\n        var canvas = document.getElementById('canvas');\r\n        this.renderer = PIXI.autoDetectRenderer(1262, 760, canvas);\r\n        document.body.appendChild(this.renderer.view);\r\n        this.renderer.view.style.position = 'absolute';\r\n        this.renderer.view.style.left = '50%';\r\n        this.renderer.view.style.top = '50%';\r\n        this.renderer.view.style.transform = 'translate3d( -50%, -50%, 0 )';\r\n\r\n        this.ratio = 1262/760;\r\n\r\n        this._stage = new PIXI.Container();\r\n        this._stage.hitArea = new PIXI.Rectangle(0, 0, 1262, 760);\r\n        this._stage.interactive = true;\r\n        this.renderer.render(this._stage);\r\n        this._onUpdateSignal = new signals.Signal();\r\n        AppProxy.getInstance().stage = this._stage;\r\n        this.animate();\r\n\r\n        window.onresize = this.onWindowResize.bind(this);\r\n        this.onWindowResize(null);\r\n    }\r\n\r\n    onWindowResize(event){\r\n        if (window.innerWidth / window.innerHeight >= this.ratio) {\r\n            var w = window.innerHeight * this.ratio;\r\n            var h = window.innerHeight;\r\n        } else {\r\n            var w = window.innerWidth;\r\n            var h = window.innerWidth / this.ratio;\r\n        }\r\n        this.renderer.view.style.width = w/1.2 + 'px';\r\n        this.renderer.view.style.height = h/1.2 + 'px';\r\n    }\r\n\r\n    animate(){\r\n        requestAnimationFrame(this.animate.bind(this));\r\n        this._onUpdateSignal.dispatch();\r\n        this.renderer.render(this._stage);\r\n    }\r\n\r\n    get onUpdateSignal(){\r\n        return this._onUpdateSignal;\r\n    }\r\n\r\n    get stage(){\r\n        return this._stage;\r\n    }\r\n}\r\n\r\nRenderer.getInstance = function(){\r\n    if (!this.instance) {\r\n        this.instance = new this();\r\n    }\r\n    return this.instance;\r\n}\r\n","/**\r\n * Created by Admin on 06.05.17.\r\n */\r\nimport {Constants} from '../components/Constants';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {StateMachine} from './StateMachine'\r\n\r\nexport class IdleState{\r\n    constructor(){}\r\n\r\n    execute(){\r\n        AppProxy.getInstance().startSpinSignal.addOnce(this.onStartSpin.bind(this));\r\n    }\r\n\r\n    onStartSpin(){\r\n        StateMachine.getInstance().setState(Constants.SPIN_START_STATE);\r\n    }\r\n\r\n    getName(){\r\n        return Constants.IDLE_STATE;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 20.05.17.\r\n */\r\nimport {Constants} from '../components/Constants';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {StateMachine} from './StateMachine';\r\nimport {AppModel} from '../AppModel';\r\nimport {AssetsManager} from '../components/AssetsManager';\r\n\r\nexport class InitState{\r\n    constructor(){}\r\n\r\n    execute(){\r\n        AppModel.getInstance().initReceivedSignal.addOnce(\r\n            this.initDataReceived.bind(this));\r\n        AppModel.getInstance().getInitData();\r\n\r\n        AppProxy.getInstance().assetsLoadedSignal.addOnce(\r\n            this.onAssetsLoadComplete.bind(this));\r\n        this.manager = new AssetsManager();\r\n        this.manager.loadAtlas();\r\n\r\n        this.assetsLoadComplete = false;\r\n        this.initResponseReceived = false;\r\n    }\r\n\r\n    onAssetsLoadComplete(){\r\n        this.assetsLoadComplete = true;\r\n        new AssetsManager().getDudeTextures();\r\n        if (this.initResponseReceived){\r\n            this.initComplete();\r\n        }\r\n    }\r\n\r\n    initDataReceived(){\r\n        this.initResponseReceived = true;\r\n        if (this.assetsLoadComplete){\r\n            this.initComplete();\r\n        }\r\n    }\r\n\r\n    initComplete(){\r\n        AppProxy.getInstance().appView.initialize();\r\n        StateMachine.getInstance().setState(Constants.IDLE_STATE);\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 06.05.17.\r\n */\r\nimport {Constants} from '../components/Constants';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {AppModel} from '../AppModel';\r\nimport {StateMachine} from './StateMachine';\r\n\r\nexport class SpinStartState{\r\n    constructor(){}\r\n\r\n    execute(){\r\n        AppProxy.getInstance().reels.startSpin();\r\n        AppModel.getInstance().spinReceivedSignal.addOnce(\r\n            this.spinDataReceived.bind(this));\r\n        AppModel.getInstance().getSpinData();\r\n        AppModel.getInstance().reduceBalance();\r\n    }\r\n\r\n    spinDataReceived(){\r\n        StateMachine.getInstance().setState(Constants.SPIN_STOP_STATE);\r\n    }\r\n\r\n    getName(){\r\n        return Constants.SPIN_START_STATE;\r\n    }\r\n}\r\n","/**\r\n * Created by Admin on 06.05.17.\r\n */\r\nimport {Constants} from '../components/Constants';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {AppModel} from '../AppModel';\r\nimport {StateMachine} from './StateMachine';\r\n\r\nexport class SpinStopState{\r\n    constructor(){}\r\n\r\n    execute(){\r\n        AppProxy.getInstance().stopSpinSignal.addOnce(this.onSpinStopped.bind(this));\r\n        AppProxy.getInstance().iconAnimations.prepareAnimation();\r\n\r\n        if (AppModel.getInstance().reelsJoint.length){\r\n            AppProxy.getInstance().reels.startJoint();\r\n        }\r\n        if (AppModel.getInstance().showDudes){\r\n            AppProxy.getInstance().ironDudes.show();\r\n        }\r\n\r\n        this.timer = setTimeout(this.stopSpinning.bind(this),\r\n            AppModel.getInstance().getSpinTime());\r\n    }\r\n\r\n    stopSpinning(){\r\n        AppProxy.getInstance().reels.stopSpin();\r\n    }\r\n\r\n    onSpinStopped(){\r\n        clearTimeout(this.timer);\r\n\r\n        if (AppModel.getInstance().lines.length){\r\n            StateMachine.getInstance().setState(Constants.WIN_ANIMATION_STATE);\r\n        } else {\r\n            StateMachine.getInstance().setState(Constants.IDLE_STATE);\r\n        }\r\n        AppModel.getInstance().updateBalance();\r\n    }\r\n\r\n    getName(){\r\n        return Constants.SPIN_STOP_STATE;\r\n    }\r\n}\r\n","import {IdleState} from './IdleState';\r\nimport {InitState} from './InitState';\r\nimport {SpinStartState} from './SpinStartState';\r\nimport {SpinStopState} from './SpinStopState';\r\nimport {WinAnimationState} from './WinAnimationState';\r\nimport {Constants} from '../components/Constants'\r\n\r\nexport class StateMachine{\r\n    constructor(){\r\n        this.stateChangeSignal = new signals.Signal();\r\n\r\n        this.stateMap = Object.create(null);\r\n        this.stateMap[Constants.INIT_STATE] = new InitState();\r\n        this.stateMap[Constants.IDLE_STATE] = new IdleState();\r\n        this.stateMap[Constants.SPIN_START_STATE] = new SpinStartState();\r\n        this.stateMap[Constants.SPIN_STOP_STATE] = new SpinStopState();\r\n        this.stateMap[Constants.WIN_ANIMATION_STATE] = new WinAnimationState();\r\n    }\r\n\r\n    initialize(){\r\n        this.setState(Constants.INIT_STATE);\r\n    }\r\n\r\n    setState(stateName){\r\n        this.currentState = this.stateMap[stateName];\r\n        this.stateChangeSignal.dispatch(this.currentState);\r\n        this.currentState.execute();\r\n    }\r\n\r\n    getCurrentState(){\r\n        return this.currentState;\r\n    }\r\n}\r\n\r\nStateMachine.getInstance = function(){\r\n    if (!this.instance) {\r\n        this.instance = new this();\r\n    }\r\n    return this.instance;\r\n}\r\n\r\n","/**\r\n * Created by Admin on 08.05.17.\r\n */\r\nimport {Constants} from '../components/Constants';\r\nimport {AppProxy} from '../AppProxy';\r\nimport {AppModel} from '../AppModel';\r\nimport {StateMachine} from './StateMachine';\r\n\r\nexport class WinAnimationState{\r\n    constructor(){}\r\n\r\n    execute(){\r\n        AppProxy.getInstance().startSpinSignal.addOnce(this.onStartSpin.bind(this));\r\n        AppProxy.getInstance().iconAnimations.visible = true;\r\n        AppProxy.getInstance().iconAnimations.playAnimation();\r\n        AppProxy.getInstance().lines.showLines();\r\n        //AppProxy.getInstance().reels.visible = false;\r\n        //AppModel.getInstance().dropFrozenReels();\r\n    }\r\n\r\n\r\n    onStartSpin(){\r\n        AppProxy.getInstance().reels.visible = true;\r\n        AppProxy.getInstance().iconAnimations.stopAnimation();\r\n        AppProxy.getInstance().iconAnimations.visible = false;\r\n        StateMachine.getInstance().setState(Constants.SPIN_START_STATE);\r\n    }\r\n\r\n    getName(){\r\n        return Constants.WIN_ANIMATION_STATE;\r\n    }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}